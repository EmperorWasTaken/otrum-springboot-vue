{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \"Person List\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"table table-striped\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Person Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Person Age\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_5 = [\"onRemove\"];\nconst _hoisted_6 = {\n  class: \"container\"\n};\n\nconst _hoisted_7 = /*#__PURE__*/_createStaticVNode(\"<form action=\\\"\\\"><div><label for=\\\"name\\\"></label><input type=\\\"text\\\" placeholder=\\\"Name\\\" id=\\\"personName\\\"></div><div><label for=\\\"age\\\"></label><input type=\\\"text\\\" placeholder=\\\"Age\\\" id=\\\"personAge\\\"></div></form>\", 1);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.personsList, (person, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: person.name,\n      onRemove: $event => $options.removePerson(index)\n    }, [_createElementVNode(\"td\", null, _toDisplayString(person.name), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(person.age), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('edit'))\n    }, \"Edit\")]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit('remove'))\n    }, \"Delete\")])], 40\n    /* PROPS, HYDRATE_EVENTS */\n    , _hoisted_5);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.addPerson && $options.addPerson(...args))\n  }, \"Add\")])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;gCACPC,oBAAwC,IAAxC,EAAwC;EAApCD,KAAK,EAAC;AAA8B,CAAxC,EAAwB,aAAxB,EAAmC;AAAA;AAAnC;;;EACOA,KAAK,EAAC;;;gCACTC,oBAGQ,OAHR,EAGQ,IAHR,EAGQ,cAFJA,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CAEI,eADJA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CACI,CAHR;;AAAA;;;;EAaCD,KAAK,EAAC;;;;;;uBAhBfE,oBA6BM,KA7BN,cA6BM,CA5BFC,UA4BE,EA3BFF,oBAaQ,OAbR,cAaQ,CAZJG,UAYI,EARJH,oBAOQ,OAPR,EAOQ,IAPR,EAOQ,oBANJC,oBAKKG,SALL,EAKK,IALL,EAKKC,YAL2BC,iBAK3B,EALsC,CAA7BC,MAA6B,EAArBC,KAAqB,KAAhB;yBAA3BP,oBAKK,IALL,EAKK;MAL+CQ,GAAG,EAAIF,MAAM,CAACG,IAK7D;MALoEC,QAAM,YAAIC,sBAAaJ,KAAb;IAK9E,CALL,GACIR,oBAAwB,IAAxB,EAAwB,IAAxB,EAAwBa,iBAAlBN,MAAM,CAACG,IAAW,CAAxB,EAAiB;IAAA;IAAjB,GACAV,oBAAuB,IAAvB,EAAuB,IAAvB,EAAuBa,iBAAjBN,MAAM,CAACO,GAAU,CAAvB,EAAgB;IAAA;IAAhB,GACAd,oBAAqD,IAArD,EAAqD,IAArD,EAAqD,CAAjDA,oBAA4C,QAA5C,EAA4C;MAAnCe,OAAK,sCAAEC,WAAK,MAAL,CAAF;IAA8B,CAA5C,EAA+B,MAA/B,CAAiD,CAArD,GACAhB,oBAAyD,IAAzD,EAAyD,IAAzD,EAAyD,CAArDA,oBAAgD,QAAhD,EAAgD;MAAvCe,OAAK,sCAAEC,WAAK,QAAL,CAAF;IAAkC,CAAhD,EAAiC,QAAjC,CAAqD,CAAzD,EAJJ;;IAAA;GAKK,CALL;;EAAA,CAMI,EAPR,CAQI,CAbR,CA2BE,EAbFhB,oBAYM,KAZN,cAYM,CAXEiB,UAWF,EADEjB,oBAAuC,QAAvC,EAAuC;IAA9Be,OAAK,yCAAEH,iDAAF;EAAyB,CAAvC,EAA2B,KAA3B,CACF,CAZN,CAaE,CA7BN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_hoisted_4","_Fragment","_renderList","$data","person","index","key","name","onRemove","$options","_toDisplayString","age","onClick","_ctx","_hoisted_7"],"sourceRoot":"","sources":["/Users/kai/Development/Otrum/Front-end/vue-otrum/src/components/Person.vue"],"sourcesContent":["<template>\n    <div class=\"container\"> \n        <h1 class=\"text-center\">Person List</h1>\n        <table class=\"table table-striped\">\n            <thead>\n                <th>Person Name</th>\n                <th>Person Age</th>\n            </thead>\n            <tbody>\n                <tr v-for = \"(person, index) in personsList\" v-bind:key = \"person.name\" @remove = \"removePerson(index)\" >\n                    <td>{{person.name}}</td>\n                    <td>{{person.age}}</td>\n                    <td><button @click=\"$emit('edit')\">Edit</button></td>\n                    <td><button @click=\"$emit('remove')\">Delete</button></td>\n                </tr>\n            </tbody>\n        </table>\n        <div class=\"container\">\n                <form action=\"\">\n                    <div>\n                        <label for=\"name\"></label>\n                        <input type=\"text\" placeholder=\"Name\" id=\"personName\">\n                    </div>\n                    <div>\n                        <label for=\"age\"></label>\n                        <input type=\"text\" placeholder=\"Age\" id=\"personAge\">\n                    </div>\n                </form>\n                <button @click=\"addPerson\">Add</button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport PersonServices from '../services/PersonServices';\n\n    export default {\n        name: 'PersonsList',\n        data(){\n            return {\n                personsList : []\n            }\n            \n        },\n        methods: {\n            getPersons(){\n                PersonServices.getPersons().then((response) => {\n                    this.personsList = response.data;\n                })\n            },\n            removePerson(index){\n                this.personsList.splice(index, 1);\n            },\n            addPerson(){\n                PersonServices.addPerson(person).then\n            }\n        },\n        created() {\n            this.getPersons();\n        }\n    }\n\n\n/*import axios from 'axios'\n\n    export default {\n        name:'PersonsList',\n        data() {\n            return {\n                personsList: [],\n            }\n        },\n        methods: {\n            getPersons(){\n                axios.get('http://localhost:8090/api/v1/persons')\n                    .then((response) => {\n                        this.personsList = response.data\n                        console.log(response.data)\n                    })\n                    .catch((error) => {\n                        console.log(error)\n                    })\n            }\n        },\n        create(){\n            this.getPersons()\n        }\n    }*/\n</script>\n\n"]},"metadata":{},"sourceType":"module"}