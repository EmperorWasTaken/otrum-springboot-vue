{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"text-center\"\n}, \"Person List\", -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = {\n  class: \"table table-striped\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Person ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Person Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Person Age\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_t = _resolveComponent(\"t\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.personsList, person => {\n    return _openBlock(), _createBlock(_component_t, {\n      key: person.id\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"td\", null, _toDisplayString(person.id) + _toDisplayString(person.name) + _toDisplayString(person.age), 1\n      /* TEXT */\n      ), _createElementVNode(\"td\", null, _toDisplayString(person.name), 1\n      /* TEXT */\n      ), _createElementVNode(\"td\", null, _toDisplayString(person.age), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1024\n    /* DYNAMIC_SLOTS */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;gCACPC,oBAAwC,IAAxC,EAAwC;EAApCD,KAAK,EAAC;AAA8B,CAAxC,EAAwB,aAAxB,EAAmC;AAAA;AAAnC;;;EACOA,KAAK,EAAC;;;gCACTC,oBAIQ,OAJR,EAIQ,IAJR,EAIQ,cAHJA,oBAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,CAGI,eAFJA,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CAEI,eADJA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CACI,CAJR;;AAAA;;;;;uBAHRC,oBAgBM,KAhBN,cAgBM,CAfFC,UAeE,EAdFF,oBAaQ,OAbR,cAaQ,CAZJG,UAYI,EAPJH,oBAMQ,OANR,EAMQ,IANR,EAMQ,oBALJC,oBAIIG,SAJJ,EAII,IAJJ,EAIIC,YAJkBC,iBAIlB,EAJQC,MAAqB,IAAf;yBAAlBC,aAIIC,YAJJ,EAII;MAJsCC,GAAG,EAAIH,MAAM,CAACI;IAIpD,CAJJ;wBACI,MAAmD,CAAnDX,oBAAmD,IAAnD,EAAmD,IAAnD,EAAmDY,iBAA7CL,MAAM,CAACI,EAAsC,IAApCC,iBAAIL,MAAM,CAACM,IAAX,CAAoC,GAArBD,iBAAIL,MAAM,CAACO,GAAX,CAA9B,EAA4C;MAAA;MAA5C,CAAmD,EACnDd,oBAAwB,IAAxB,EAAwB,IAAxB,EAAwBY,iBAAlBL,MAAM,CAACM,IAAW,CAAxB,EAAiB;MAAA;MAAjB,CADmD,EAEnDb,oBAAuB,IAAvB,EAAuB,IAAvB,EAAuBY,iBAAjBL,MAAM,CAACO,GAAU,CAAvB,EAAgB;MAAA;MAAhB,CAFmD;;;;KADvD;;IAAA;GAII,CAJJ;;EAAA,CAKI,EANR,CAOI,CAbR,CAcE,CAhBN","names":["class","_createElementVNode","_createElementBlock","_hoisted_2","_hoisted_4","_Fragment","_renderList","$data","person","_createBlock","_component_t","key","id","_toDisplayString","name","age"],"sourceRoot":"","sources":["/Users/kai/Development/Otrum/Front-end/vue-otrum/src/components/Person.vue"],"sourcesContent":["<template>\n    <div class=\"container\"> \n        <h1 class=\"text-center\">Person List</h1>\n        <table class=\"table table-striped\">\n            <thead>\n                <th>Person ID</th>\n                <th>Person Name</th>\n                <th>Person Age</th>\n            </thead>\n            <tbody>\n                <t v-for = \"person in personsList\" v-bind:key = \"person.id\" >\n                    <td>{{person.id}}{{person.name}}{{person.age}}</td>\n                    <td>{{person.name}}</td>\n                    <td>{{person.age}}</td>\n                </t>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\nimport PersonServices from '@/services/PersonServices';\n\n    export default {\n        name: 'PersonsList',\n        data(){\n            return {\n                personsList : [{name: 'Kai'}, {age: '27'}, {id: '0'}]\n            }\n            \n        },\n        methods: {\n            getPersons(){\n                PersonServices.getAllPersons().then((response) => {\n                    this.personsList = response.data;\n                })\n            }\n        },\n        create() {\n            this.getAllPersons()\n        }\n    }\n</script>\n\n"]},"metadata":{},"sourceType":"module"}